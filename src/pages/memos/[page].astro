---
import type { Page } from 'astro'
import { type CollectionEntry, render } from 'astro:content'
import Layout from '@layouts/Layout.astro'
import { MemoLayout } from '@components/MemoLayout/MemoLayout'
import { Memo } from '@components/Memo/Memo'
import {
  Pagination,
  PaginationLabel,
  PaginationLinkGroup,
  PaginationLink,
} from '@components/Pagination/PaginationPrimitive'
import { getReleaseMemoCollection } from '@collection/memo'
import fs from 'node:fs/promises'

type Props = {
  page: Page<CollectionEntry<'memo'>>
}

export async function getStaticPaths({ paginate }) {
  const memoCollection = await getReleaseMemoCollection()

  await fs.writeFile('public/search-db.json', JSON.stringify(memoCollection))

  return paginate(
    memoCollection.sort((a, b) => Number(a.id) - Number(b.id)).reverse(),
    {
      pageSize: 10,
    }
  )
}

export const prerender = true

const { page } = Astro.props

const PAGE_TITLE = `메모 ${page.currentPage}페이지 | eunsoolee`
const PAGE_DESCRIPTION = ''
---

<Layout title={PAGE_TITLE} description={PAGE_DESCRIPTION}>
  <MemoLayout>
    {
      page.data.map(async (memo) => {
        const { Content } = await render(memo)

        return (
          <Memo memo={memo}>
            <Content />
          </Memo>
        )
      })
    }
  </MemoLayout>

  <Pagination>
    <PaginationLabel>
      {`${page.lastPage} 중 ${page.currentPage}페이지`}
    </PaginationLabel>
    <PaginationLinkGroup>
      {
        page.url.prev && (
          <PaginationLink href={page.url.prev}>이전 페이지</PaginationLink>
        )
      }
      {
        page.url.next && (
          <PaginationLink href={page.url.next}>다음 페이지</PaginationLink>
        )
      }
    </PaginationLinkGroup>
  </Pagination>
</Layout>
